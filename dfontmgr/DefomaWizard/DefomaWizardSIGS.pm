#!/usr/bin/perl -w
#
# This is the (re)generated signal handler class
# You can cut and paste the skeleton signal handler subs from this file
# into the relevant classes in your application or its subclasses
#
# DO NOT EDIT THIS FILE, ANY CHANGES THAT YOU MAKE WILL BE LOST WHEN
# THIS FILE WILL BE OVERWRITTEN BY THE NEXT RUN OF Glade::PerlGenerate
#
#==============================================================================
#=== This is the 'defomawizard' class                              
#==============================================================================
package defomawizard;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'defomawizard' (version 0.01)
# 
# Copyright (c) Date 2001年 11月 16日 金曜日 22:44:05 JST
# Author Yasuhiro Take,,, <redstar\@laminar>
#
## Unspecified copying policy, please contact the author\n#  Yasuhiro Take,,, <redstar\@laminar>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.59 - Wed Jun 20 14:48:25 BST 2001
# Copyright (c) Author Dermot Musgrove <dermot.musgrove\@virgin.net>
#
# from Glade file /home/redstar/Projects/defomawizard/defomawizard.glade
# Fri Nov 23 21:04:57 JST 2001
#==============================================================================

BEGIN {
    use src::DefomaWizardUI;
} # End of sub BEGIN

sub app_run {
    my ($class) = @_;
    $class->load_translations('DefomaWizard');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/C/LC_MESSAGES/DefomaWizard.mo)
#    $class->load_translations('DefomaWizard', 'test', undef, '/home/redstar/Projects/defomawizard/ppo/DefomaWizard.mo');
    Gtk->init;
    my $window = $class->new;
    $window->TOPLEVEL->show;

    # Put any extra UI initialisation (eg signal_connect) calls here

    # Now let Gtk handle signals
    Gtk->main;

    $window->TOPLEVEL->destroy;

    return $window;

} # End of sub app_run

#===============================================================================
#=== Below are the default signal handlers for 'defomawizard' class
#===============================================================================
sub about_Form {
    my ($class) = @_;
    my $gtkversion = 
        Gtk->major_version.".".
        Gtk->minor_version.".".
        Gtk->micro_version;
    my $name = $0;
    my $message = 
        __PACKAGE__." ("._("version")." $VERSION - $DATE)\n".
        _("Written by")." $AUTHOR \n\n".
        _("No description")." \n\n".
        "Gtk ".     _("version").": $gtkversion\n".
        "Gtk-Perl "._("version").": $Gtk::VERSION\n".
        _("run from file").": $name";
    __PACKAGE__->message_box($message, _("About")." \u".__PACKAGE__, [_('Dismiss'), _('Quit Program')], 1,
        "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm", 'left' );
} # End of sub about_Form

sub destroy_Form {
    my ($class, $data, $object, $instance) = @_;
    Gtk->main_quit; 
} # End of sub destroy_Form

sub toplevel_hide    { shift->get_toplevel->hide    }
sub toplevel_close   { shift->get_toplevel->close   }
sub toplevel_destroy { shift->get_toplevel->destroy }

#==============================================================================
#=== Below are the signal handlers for 'defomawizard' class 
#==============================================================================
sub on_cancel_clicked {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_cancel_clicked";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_cancel_clicked." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_cancel_clicked

sub on_clist_select_row {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_clist_select_row";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_clist_select_row." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_clist_select_row

sub on_clist_unselect_row {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_clist_unselect_row";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_clist_unselect_row." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_clist_unselect_row

sub on_defomawizard_delete_event {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_defomawizard_delete_event";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_defomawizard_delete_event." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_defomawizard_delete_event

sub on_entry_activate {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_entry_activate";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_entry_activate." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_entry_activate

sub on_next_clicked {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_next_clicked";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_next_clicked." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_next_clicked

sub on_radiobutton_no_clicked {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_radiobutton_no_clicked";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_radiobutton_no_clicked." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_radiobutton_no_clicked

sub on_radiobutton_yes_clicked {
    my ($class, $data, $object, $instance, $event) = @_;
    my $me = __PACKAGE__."->on_radiobutton_yes_clicked";
    # Get ref to hash of all widgets on our form
    my $form = $__PACKAGE__::all_forms->{$instance};

    # REPLACE the line below with the actions to be taken when __PACKAGE__."->on_radiobutton_yes_clicked." is called
    __PACKAGE__->show_skeleton_message($me, \@_, __PACKAGE__, "$Glade::PerlRun::pixmaps_directory/glade2perl_logo.xpm");

} # End of sub on_radiobutton_yes_clicked










1;

__END__

#===============================================================================
#==== Documentation
#===============================================================================
=pod

=head1 NAME

DefomaWizardSIGS - version 0.01 2001年 11月 16日 金曜日 22:44:05 JST

No description

=head1 SYNOPSIS

 use DefomaWizardSIGS;

 To construct the window object and show it call
 
 Gtk->init;
 my $window = defomawizard->new;
 $window->TOPLEVEL->show;
 Gtk->main;
 
 OR use the shorthand for the above calls
 
 defomawizard->app_run;

=head1 DESCRIPTION

Unfortunately, the author has not yet written any documentation :-(

=head1 AUTHOR

Yasuhiro Take,,, <redstar\@laminar>

=cut
